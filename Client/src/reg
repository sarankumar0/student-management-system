// import { useState } from "react";
// import { useForm } from "react-hook-form";
// import { yupResolver } from "@hookform/resolvers/yup";
// import * as yup from "yup";
// import { useNavigate } from "react-router-dom";
// import { toast } from "react-toastify";
// import "react-toastify/dist/ReactToastify.css";
// import { ToastContainer } from "react-toastify";
// import axios from "axios";

// const schema = yup.object().shape({
//   email: yup.string().email("Invalid email").required("Email is required"),
//   password: yup.string().min(6, "Password must be at least 6 characters").required("Password is required"),
//   confirmPassword: yup.string()
//     .oneOf([yup.ref("password"), null], "Passwords must match")
//     .required("Confirm Password is required"),
//   role: yup.string().required("Role is required"),
//   agreeTerms: yup.boolean().oneOf([true], "You must accept the terms"),
// });

// const Register = () => {
//   const [role, setRole] = useState("user");
//   const [adminKey, setAdminKey] = useState("");
//   const navigate = useNavigate();

//   const { register, handleSubmit, watch, formState: { errors } } = useForm({
//     resolver: yupResolver(schema),
//   });

//   const onSubmit = async (data) => {
//     try {
//       const requestBody = { name: "users", ...data };
//       if (role === "admin") requestBody.adminKey = adminKey;

//       const response = await axios.post("http://localhost:5000/api/auth/register", requestBody);
//       toast.success(response.data.message, { position: "top-right" });
//       navigate("/login");
//     } catch (error) {
//       toast.error(error.response?.data?.message || "Registration failed", { position: "top-right" });
//     }
//   };

//   return (
//     <div className="flex min-h-screen items-center justify-center bg-gray-100 p-4">
//       <div className="w-full max-w-4xl bg-white shadow-lg rounded-lg overflow-hidden flex flex-col md:flex-row">
//         {/* Left Side (Only in Desktop) */}
//         <div className="hidden md:block w-1/2 bg-cover bg-center" style={{ backgroundImage: 'url(/path-to-image.jpg)' }}>
//           <a href="/" className="absolute top-4 left-4 text-white bg-black bg-opacity-50 px-3 py-1 rounded-lg">Back to Website</a>
//         </div>

//         {/* Right Side (Form) */}
//         <div className="w-full md:w-1/2 p-8">
//           <h2 className="text-2xl font-bold text-blue-600 text-center">Register</h2>

//           <form onSubmit={handleSubmit(onSubmit)} className="mt-4">
//             <label className="block text-gray-700">Select Role</label>
//             <select {...register("role")} className="w-full px-3 py-2 border rounded-lg" onChange={(e) => setRole(e.target.value)}>
//               <option value="user">Student</option>
//               <option value="admin">Admin</option>
//             </select>
//             <p className="text-red-500 text-sm">{errors.role?.message}</p>

//             {role === "admin" && (
//               <div className="mt-4">
//                 <label className="block text-gray-700">Admin Secret Key</label>
//                 <input type="password" className="w-full px-3 py-2 border rounded-lg" {...register("adminKey")} value={adminKey} onChange={(e) => setAdminKey(e.target.value)} />
//               </div>
//             )}

//             <label className="block text-gray-700 mt-4">Email</label>
//             <input type="email" className="w-full px-3 py-2 border rounded-lg" {...register("email")} />
//             <p className="text-red-500 text-sm">{errors.email?.message}</p>

//             <label className="block text-gray-700 mt-4">Password</label>
//             <input type="password" className="w-full px-3 py-2 border rounded-lg" {...register("password")} />
//             <p className="text-red-500 text-sm">{errors.password?.message}</p>

//             <label className="block text-gray-700 mt-4">Confirm Password</label>
//             <input type="password" className="w-full px-3 py-2 border rounded-lg" {...register("confirmPassword")} />
//             <p className="text-red-500 text-sm">{errors.confirmPassword?.message}</p>

//             <div className="mt-4">
//               <input type="checkbox" {...register("agreeTerms")} />
//               <label className="ml-2 text-gray-700">I agree to the Terms and Conditions</label>
//               <p className="text-red-500 text-sm">{errors.agreeTerms?.message}</p>
//             </div>

//             <button type="submit" className="w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 mt-4">
//               Register
//             </button>
//           </form>
//           <ToastContainer />
//         </div>
//       </div>
//     </div>
//   );
// };

// export default Register;












// import { useState, useEffect } from "react";
// import { useNavigate, useLocation } from "react-router-dom";
// import { toast } from "react-toastify";
// import "react-toastify/dist/ReactToastify.css";
// import { ToastContainer } from "react-toastify";
// import GuestNavBar from "./components/Guest/GuesstNavBar";
// import axios from "axios";

// const Register = () => {
//   const [email, setEmail] = useState("");
//   const [password, setPassword] = useState("");
//   const [confirmPassword, setConfirmPassword] = useState("");
//   const [role, setRole] = useState("user");
//   const [plan, setPlan] = useState("");
//   const [adminKey, setAdminKey] = useState(""); // ✅ Admin Key
//   const [agreeTerms, setAgreeTerms] = useState(false);
//   const [modalOpen, setModalOpen] = useState(false); // ✅ Modal State
//   const [registrationData, setRegistrationData] = useState(null); // ✅ Store Reg Data
//   const navigate = useNavigate();
//   const location = useLocation();

//   // ✅ Extract plan type from URL on component mount
//   useEffect(() => {
//     const params = new URLSearchParams(location.search);
//     const selectedPlan = params.get("plan") || "";
//     setPlan(selectedPlan);
//   }, [location]);

//   const handleRegister = async () => {
//     if (password !== confirmPassword) {
//       toast.error("Passwords do not match!", { position: "top-right" });
//       return;
//     }

//     try {
//       const requestBody = { name: "users", email, password, role };
//       if (role === "user") {
//         requestBody.plan = plan || "basic";
//       } else if (role === "admin") {
//         requestBody.adminKey = adminKey;
//       }

//       const response = await axios.post("http://localhost:5000/api/auth/register", requestBody);
//       setRegistrationData({
//         email: email,
//         registrationNumber: response.data.registrationNumber,
//       });
//       setModalOpen(true); // ✅ Open modal instead of redirecting immediately

//       toast.success(response.data.message, { position: "top-right" });

//     } catch (error) {
//       toast.error(error.response?.data?.message || "Registration failed", { position: "top-right" });
//     }
//   };

//   return (
//     <>
//       <GuestNavBar />
//       <div className="flex min-h-screen items-center justify-center bg-gray-100 p-4">
//         <div className="flex w-full max-w-4xl bg-white shadow-lg rounded-lg overflow-hidden">
//           <div className="w-full md:w-1/2 p-8 animate-slideInRight">
//             <h2 className="text-2xl font-bold text-blue-600 text-center">Register</h2>

//             {/* ✅ Role Selection */}
//             <div className="mt-4">
//               <label className="block text-gray-700">Select Role</label>
//               <select
//                 className="w-full px-3 py-2 border rounded-lg"
//                 value={role}
//                 onChange={(e) => setRole(e.target.value)}
//               >
//                 <option value="user">Student</option>
//                 <option value="admin">Admin</option>
//               </select>
//             </div>

//             {/* ✅ Show Plan Only If Role is Student */}
//             {role === "user" && (
//               <p className="text-center text-gray-700 mt-2">
//                 Selected Plan: <b>{plan ? plan.toUpperCase() : "BASIC"}</b>
//               </p>
//             )}

//             {/* ✅ Admin Key Input */}
//             {role === "admin" && (
//               <div className="mt-4">
//                 <label className="block text-gray-700">Admin Secret Key</label>
//                 <input
//                   type="password"
//                   className="w-full px-3 py-2 border rounded-lg"
//                   placeholder="Enter Admin Key"
//                   value={adminKey}
//                   onChange={(e) => setAdminKey(e.target.value)}
//                 />
//               </div>
//             )}

//             <div className="mt-4">
//               <label className="block text-gray-700">Email</label>
//               <input
//                 type="email"
//                 className="w-full px-3 py-2 border rounded-lg"
//                 placeholder="Example@gmail.com"
//                 value={email}
//                 onChange={(e) => setEmail(e.target.value)}
//               />
//             </div>

//             <div className="mt-4">
//               <label className="block text-gray-700">Password</label>
//               <input
//                 type="password"
//                 className="w-full px-3 py-2 border rounded-lg"
//                 placeholder="Enter Password"
//                 value={password}
//                 onChange={(e) => setPassword(e.target.value)}
//               />
//             </div>

//             <div className="mt-4">
//               <label className="block text-gray-700">Confirm Password</label>
//               <input
//                 type="password"
//                 className="w-full px-3 py-2 border rounded-lg"
//                 placeholder="Confirm Password"
//                 value={confirmPassword}
//                 onChange={(e) => setConfirmPassword(e.target.value)}
//               />
//             </div>

//             <div className="mt-4">
//               <input type="checkbox" checked={agreeTerms} onChange={() => setAgreeTerms(!agreeTerms)} />
//               <label className="ml-2 text-gray-700">I agree to the Terms and Conditions</label>
//             </div>

//             <button
//               className="w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 mt-4 disabled:bg-gray-400"
//               disabled={!agreeTerms}
//               onClick={handleRegister}
//             >
//               Register
//             </button>

//             <ToastContainer />
//           </div>
//         </div>
//       </div>

//       {/* ✅ MODAL (Shows Registration Number & Login Button) */}
//       {modalOpen && (
//         <div className="fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center">
//           <div className="bg-white p-6 rounded-lg shadow-lg text-center w-80">
//             <h2 className="text-xl font-bold text-green-600">Registration Successful! 🎉</h2>
//             <p className="mt-2 text-gray-700">Email: <b>{registrationData?.email}</b></p>
//             <p className="text-gray-700">Your Registration Number: <b>{registrationData?.registrationNumber}</b></p>
//             <button
//               className="mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
//               onClick={() => navigate("/login")}
//             >
//               Go to Login
//             </button>
//           </div>
//         </div>
//       )}
//     </>
//   );
// };

// export default Register;

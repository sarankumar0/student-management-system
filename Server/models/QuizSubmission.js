// models/QuizSubmission.js
const mongoose = require('mongoose');
const Schema = mongoose.Schema;

// Sub-schema for storing individual answers within a submission
const submittedAnswerSchema = new Schema({
    // Reference to the specific question within the Quiz.questions array
    // We store the question's _id generated by Mongoose for subdocuments
    questionId: {
        type: Schema.Types.ObjectId, // Assuming question subdocs have _id
        required: true
    },
    // Store the index of the option the student selected
    selectedOptionIndex: {
        type: Number,
        required: false, // Allow null if the student skipped the question
        default: null
    },
    // Optional: Store if the answer was correct at the time of submission
    isCorrect: {
        type: Boolean
    }
}, { _id: false }); // No separate _id needed for each answer obj

// Main Schema for storing a student's quiz attempt
const quizSubmissionSchema = new Schema({
    quiz: { // Reference to the Quiz document
        type: Schema.Types.ObjectId,
        ref: 'Quiz',
        required: true,
        index: true
    },
    student: { // Reference to the User document (student)
        type: Schema.Types.ObjectId,
        ref: 'User', // Use 'User' as per your user model name
        required: true,
        index: true
    },
    answers: { // Array storing what the student selected for each question
        type: [submittedAnswerSchema],
        required: true
    },
    score: { // The calculated score for this attempt
        type: Number,
        required: true,
        min: 0
    },
    totalPossibleScore: { // The total possible score for the quiz at the time of submission
        type: Number,
        required: true,
        min: 0
    },
    // Optional: Calculate and store pass/fail status
    passed: {
        type: Boolean
    },
    submittedAt: { // Timestamp for when the submission occurred
        type: Date,
        default: Date.now
    },
    // Optional: Store time taken if timer implemented fully
    timeTakenSeconds: {
        type: Number
    }
}, { timestamps: true }); // Adds createdAt, updatedAt (might be redundant with submittedAt)

// --- Add Compound Index for Single-Attempt Check ---
// Ensure a student can submit a specific quiz only once
quizSubmissionSchema.index({ quiz: 1, student: 1 }, { unique: true });

module.exports = mongoose.model('QuizSubmission', quizSubmissionSchema);